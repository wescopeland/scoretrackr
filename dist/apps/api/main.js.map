{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/connections/local.ts","webpack:///./apps/api/src/main.ts","webpack:///./apps/api/src/resolvers/game.resolver.ts","webpack:///./apps/api/src/resolvers/recent-submissions.resolver.ts","webpack:///./apps/api/src/resolvers/score.resolver.ts","webpack:///./apps/api/src/resolvers/track-leaderboard.resolver.ts","webpack:///./apps/api/src/resolvers/track.resolver.ts","webpack:///./apps/api/src/utils/create-db-timestamp.ts","webpack:///./apps/api/src/utils/filter-scores-by-player-top.ts","webpack:///./libs/data-access-common-models/src/index.ts","webpack:///./libs/data-access-common-models/src/lib/game-drawer-width.ts","webpack:///./libs/data-access-common-models/src/lib/submission-blob.model.ts","webpack:///./libs/data-access-entities/src/index.ts","webpack:///./libs/data-access-entities/src/lib/game.entity.ts","webpack:///./libs/data-access-entities/src/lib/score.entity.ts","webpack:///./libs/data-access-entities/src/lib/track.entity.ts","webpack:///external \"apollo-server\"","webpack:///external \"date-fns\"","webpack:///external \"reflect-metadata\"","webpack:///external \"tslib\"","webpack:///external \"type-graphql\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ConnectionOptions } from 'typeorm';\n\nexport const local: ConnectionOptions = {\n  type: 'postgres',\n  host: 'localhost',\n  port: 5432,\n  username: 'wescopeland',\n  password: 'wescopeland',\n  database: 'scoretrackr',\n  synchronize: true,\n  logging: false\n};\n","import 'reflect-metadata';\nimport { createConnection } from 'typeorm';\nimport { ApolloServer } from 'apollo-server';\nimport { buildSchema } from 'type-graphql';\n\nimport { local } from './connections/local';\nimport { Game, Score, Track } from '@scoretrackr/data-access-entities';\nimport { GameResolver } from './resolvers/game.resolver';\nimport { RecentSubmissionsResolver } from './resolvers/recent-submissions.resolver';\nimport { ScoreResolver } from './resolvers/score.resolver';\nimport { TrackResolver } from './resolvers/track.resolver';\nimport { TrackLeaderboardResolver } from './resolvers/track-leaderboard.resolver';\n\nconst startServer = async () => {\n  const schema = await buildSchema({\n    resolvers: [\n      GameResolver,\n      RecentSubmissionsResolver,\n      ScoreResolver,\n      TrackResolver,\n      TrackLeaderboardResolver\n    ]\n  });\n\n  const server = new ApolloServer({ schema });\n\n  createConnection({\n    ...local,\n    entities: [Game, Score, Track]\n  });\n\n  await server.listen(4000);\n  console.log('Server has started!');\n};\n\nstartServer();\n","import {\n  Arg,\n  FieldResolver,\n  ResolverInterface,\n  Root,\n  Resolver,\n  Query\n} from 'type-graphql';\n\nimport { Game, Track } from '@scoretrackr/data-access-entities';\n\n@Resolver((of) => Game)\nexport class GameResolver implements ResolverInterface<Game> {\n  @Query((returns) => Game)\n  async game(@Arg('id') id: string) {\n    return await Game.findOne(id);\n  }\n\n  @FieldResolver()\n  async tracks(@Root() game: Game) {\n    return await Track.find({ game: { id: game.id } });\n  }\n}\n","import { Arg, Resolver, Query } from 'type-graphql';\nimport { format, fromUnixTime } from 'date-fns';\n\nimport { SubmissionBlob } from '@scoretrackr/data-access-common-models';\nimport { Score } from '@scoretrackr/data-access-entities';\n\n@Resolver()\nexport class RecentSubmissionsResolver {\n  @Query((returns) => [SubmissionBlob])\n  async recentSubmissions(@Arg('limitToDays') limitToDays: number) {\n    const scores = await Score.find({\n      take: 60,\n      order: { submittedAt: 'DESC' }\n    });\n\n    const returnSubmissionBlobs = [];\n    const datesTracked: string[] = [];\n\n    let currentSubmissionBlob: SubmissionBlob = {\n      date: null,\n      submissions: []\n    };\n\n    scores.forEach((score) => {\n      const parsedDate = fromUnixTime(score.submittedAt.getTime() / 1000);\n      const formattedSubmittedAtDate = format(parsedDate, 'yyyy-MM-dd');\n\n      if (datesTracked.includes(formattedSubmittedAtDate)) {\n        // Fall into this case if we're already building a\n        // submission blob for this date.\n\n        currentSubmissionBlob.submissions.push(score);\n      } else if (datesTracked.length < limitToDays) {\n        // Fall into this case if we're not building a submission blob for\n        // this date, but we still have room to do so.\n\n        // Finish off the previous submission blob if it's there.\n        if (currentSubmissionBlob.date) {\n          returnSubmissionBlobs.push(currentSubmissionBlob);\n          currentSubmissionBlob = { date: null, submissions: [] };\n        }\n\n        datesTracked.push(formattedSubmittedAtDate); // => ['2016-05-05T04:00:00.000Z']\n\n        // Start building the new blob.\n        currentSubmissionBlob.date = parsedDate.toISOString();\n        currentSubmissionBlob.submissions.push(score);\n      }\n    });\n\n    // We just finished building the last submission blob.\n    // Make sure it ends up in the response payload.\n    if (currentSubmissionBlob.date) {\n      returnSubmissionBlobs.push(currentSubmissionBlob);\n    }\n\n    return returnSubmissionBlobs;\n  }\n}\n","import {\n  Arg,\n  FieldResolver,\n  Resolver,\n  ResolverInterface,\n  Root,\n  Query\n} from 'type-graphql';\nimport { LessThanOrEqual } from 'typeorm';\n\nimport { Game, Score, Track } from '@scoretrackr/data-access-entities';\nimport { createDbTimestamp } from '../utils/create-db-timestamp';\nimport { filterScoresByPlayerTop } from '../utils/filter-scores-by-player-top';\n\ninterface PositionRecord {\n  position: number;\n  score: number;\n}\n\n@Resolver((of) => Score)\nexport class ScoreResolver implements ResolverInterface<Score> {\n  @Query((returns) => Score)\n  async score(@Arg('id') id: string) {\n    return await Score.findOne(id);\n  }\n\n  @FieldResolver()\n  async track(@Root() score: Score) {\n    return await Track.findOne(score.track);\n  }\n\n  @FieldResolver()\n  async game(@Root() score: Score) {\n    return await Game.findOne(score.game);\n  }\n\n  @FieldResolver((returns) => Number, { nullable: true })\n  async position(\n    @Root() score: Score,\n    @Arg('onDate', { nullable: true }) onDate?: string\n  ) {\n    const cutoffDate = onDate ? createDbTimestamp(onDate) : createDbTimestamp();\n\n    const track = await Track.findOne(score.track);\n    const allTrackScores = await Score.find({\n      where: { track, submittedAt: LessThanOrEqual(cutoffDate) },\n      order: { finalScore: 'DESC' }\n    });\n\n    const filteredScores = filterScoresByPlayerTop(allTrackScores);\n\n    const positions: PositionRecord[] = [];\n    let tieCounter = 1;\n\n    for (const [index, filteredScore] of filteredScores.entries()) {\n      if (index === 0) {\n        positions[index] = { position: 1, score: filteredScore.finalScore };\n      } else if (positions[index - 1].score === filteredScore.finalScore) {\n        // Fall into this block if this score ties the previous one.\n        tieCounter += 1;\n        positions[index] = {\n          position: positions[index - 1].position,\n          score: filteredScore.finalScore\n        };\n      } else {\n        // Fall into this block if we're not tied.\n        positions[index] = {\n          position: positions[index - 1].position + tieCounter,\n          score: filteredScore.finalScore\n        };\n\n        tieCounter = 1; // In case the previous record was a tie.\n      }\n    }\n\n    // All the position records have been built. Try to find the\n    // input score in the list of records.\n    const positionRecord = positions.find((p) => p.score === score.finalScore);\n\n    return positionRecord?.position ?? null;\n  }\n}\n","import { Arg, FieldResolver, Resolver, Root, Query, ID } from 'type-graphql';\nimport { LessThanOrEqual } from 'typeorm';\n\nimport { Score, Track } from '@scoretrackr/data-access-entities';\nimport { createDbTimestamp } from '../utils/create-db-timestamp';\nimport { filterScoresByPlayerTop } from '../utils/filter-scores-by-player-top';\n\n@Resolver((of) => Score)\nexport class TrackLeaderboardResolver {\n  @Query((returns) => [Score])\n  async trackLeaderboard(\n    @Arg('trackId') trackId: string,\n    @Arg('onDate', { nullable: true }) onDate?: string\n  ) {\n    const cutoffDate = onDate ? createDbTimestamp(onDate) : createDbTimestamp();\n\n    const track = await Track.findOne({ id: trackId });\n    const trackScores = await Score.find({\n      where: { track, submittedAt: LessThanOrEqual(cutoffDate) },\n      order: { finalScore: 'DESC' }\n    });\n\n    const onlyPersonalBestScores = filterScoresByPlayerTop(trackScores);\n\n    return onlyPersonalBestScores;\n  }\n}\n","import { Arg, FieldResolver, Resolver, Root, Query } from 'type-graphql';\n\nimport { Score, Track } from '@scoretrackr/data-access-entities';\n\n@Resolver((of) => Track)\nexport class TrackResolver {\n  @Query((returns) => [Track])\n  async tracksByGameId(@Arg('gameId') gameId: string) {\n    return await Track.find({ game: { id: gameId } });\n  }\n\n  @FieldResolver((returns) => Number)\n  async submissionCount(@Root() track: Track) {\n    const [scores, count] = await Score.findAndCount({ track });\n\n    return count;\n  }\n}\n","import { format } from 'date-fns';\n\nexport const createDbTimestamp = (date?: string) => {\n  // We are using sqlite in Jest for an in-memory database.\n  // sqlite does not natively support the timestamp type,\n  // so those values must be converted to strings.\n  if (!process.env.JEST_WORKER_ID) {\n    return date ? new Date(date) : new Date();\n  } else {\n    return date\n      ? format(new Date(date), 'yyyy-MM-dd')\n      : format(new Date(), 'yyyy-MM-dd');\n  }\n};\n","import { Score } from '@scoretrackr/data-access-entities';\n\n// For the sake of position tracking, we only care\n// about a player's top scores. eg: If Player A has\n// scores of 800 and 700, we only care about the 800\n// and want to throw the 700 point score away.\nexport const filterScoresByPlayerTop = (scores: Score[]): Score[] => {\n  const filteredScores: Score[] = [];\n  const trackedPlayerAliases: string[] = [];\n  scores.forEach((score) => {\n    const { playerAlias } = score;\n\n    if (!trackedPlayerAliases.includes(playerAlias)) {\n      trackedPlayerAliases.push(playerAlias);\n      filteredScores.push(score);\n    }\n  });\n\n  return filteredScores;\n};\n","export * from './lib/game-drawer-width';\nexport * from './lib/store-defaults.model';\nexport * from './lib/submission-blob.model';\n","export const gameDrawerWidth = 260;\n","import { ObjectType, Field } from 'type-graphql';\n\nimport { Score } from '@scoretrackr/data-access-entities';\n\n@ObjectType()\nexport class SubmissionBlob {\n  @Field(() => String)\n  date: string;\n\n  @Field(() => [Score])\n  submissions: Partial<Score>[];\n}\n","export * from './lib/game.entity';\nexport * from './lib/score.entity';\nexport * from './lib/track.entity';\n","import { Entity, BaseEntity, Column, PrimaryColumn, OneToMany } from 'typeorm';\nimport { ObjectType, Field, ID } from 'type-graphql';\n\nimport { Track } from './track.entity';\n\n@Entity()\n@ObjectType()\nexport class Game extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryColumn('text')\n  id: string;\n\n  @Field(() => String)\n  @Column('text')\n  name: string;\n\n  @Field(() => String)\n  @Column('text')\n  color: string;\n\n  @Field(() => [Track])\n  @OneToMany((type) => Track, (track) => track.game)\n  tracks: Track[];\n}\n","import {\n  BaseEntity,\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne\n} from 'typeorm';\nimport { ObjectType, Field, ID } from 'type-graphql';\n\nimport { Game } from './game.entity';\nimport { Track } from './track.entity';\n\n@Entity()\n@ObjectType()\nexport class Score extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Field(() => Number)\n  @Column('integer')\n  finalScore: number;\n\n  @Field(() => String)\n  @Column('text')\n  platform: string;\n\n  @Field(() => String)\n  @Column('text')\n  playerAlias: string;\n\n  @Field(() => Date)\n  @Column('timestamp')\n  submittedAt: Date;\n\n  @Field(() => Game)\n  @ManyToOne((type) => Game, (game) => game.id)\n  game: Game;\n\n  @Field(() => Track)\n  @ManyToOne((type) => Track, (track) => track.id)\n  track: Track;\n\n  position: number;\n}\n","import {\n  BaseEntity,\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToOne\n} from 'typeorm';\nimport { ObjectType, Field, ID } from 'type-graphql';\n\nimport { Game } from './game.entity';\n\n@Entity()\n@ObjectType()\nexport class Track extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Field(() => String)\n  @Column('text')\n  name: string;\n\n  @Field(() => String)\n  @Column('text')\n  friendlyId: string;\n\n  @Field(() => Game)\n  @ManyToOne((type) => Game, (game) => game.id)\n  game: Game;\n\n  submissionCount: number;\n}\n","module.exports = require(\"apollo-server\");","module.exports = require(\"date-fns\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"tslib\");","module.exports = require(\"type-graphql\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}