{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/GameTracksBar/GameTracksBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { GameDrawerToggleButton } from '../GameDrawerToggleButton';\nimport { TrackTabs } from '../TrackTabs';\nimport { useStyles } from './GameTracksBar.styles';\nimport { sortTracks } from './sort-tracks';\nexport var GameTracksBar = function GameTracksBar(_ref) {\n  _s();\n\n  var gameColor = _ref.gameColor,\n      isLoading = _ref.isLoading,\n      tracks = _ref.tracks;\n  var dispatch = useDispatch();\n  var activeGameState = useSelector(selectActiveGameState);\n\n  var _useStyles = useStyles({\n    gameColor: gameColor,\n    isLoading: isLoading,\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  }),\n      appBar = _useStyles.appBar,\n      toolBar = _useStyles.toolBar;\n\n  var toggleDesktopSidenav = function toggleDesktopSidenav() {\n    dispatch(activeGameActions.toggleIsDesktopSidenavOpen());\n  };\n\n  var toggleMobileSidenav = function toggleMobileSidenav() {\n    dispatch(activeGameActions.toggleIsMobileSidenavOpen());\n  };\n\n  var sortedTracks = tracks ? sortTracks(tracks) : null;\n  return __jsx(AppBar, {\n    className: appBar,\n    position: \"relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar, {\n    className: toolBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(GameDrawerToggleButton, {\n    onDesktopClick: toggleDesktopSidenav,\n    onMobileClick: toggleMobileSidenav,\n    isMobileSidenavOpen: activeGameState.isMobileSidenavOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), isLoading ? __jsx(Skeleton, {\n    \"data-testid\": \"track-tabs-loading\",\n    width: \"100%\",\n    height: 36,\n    variant: \"rect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }) : __jsx(TrackTabs, {\n    gameColor: gameColor,\n    tracks: sortedTracks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(GameTracksBar, \"WVG9oZpQVrQxX+H1qvn9FJVO4Ks=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = GameTracksBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameTracksBar\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/GameTracksBar/GameTracksBar.tsx"],"names":["AppBar","Toolbar","Skeleton","React","useDispatch","useSelector","activeGameActions","selectActiveGameState","GameDrawerToggleButton","TrackTabs","useStyles","sortTracks","GameTracksBar","gameColor","isLoading","tracks","dispatch","activeGameState","isDesktopSidenavOpen","appBar","toolBar","toggleDesktopSidenav","toggleIsDesktopSidenavOpen","toggleMobileSidenav","toggleIsMobileSidenavOpen","sortedTracks","isMobileSidenavOpen"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,iBAAT,EAA4BC,qBAA5B,QAAyD,qBAAzD;AAEA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAQA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAIH;AAAA;;AAAA,MAHxBC,SAGwB,QAHxBA,SAGwB;AAAA,MAFxBC,SAEwB,QAFxBA,SAEwB;AAAA,MADxBC,MACwB,QADxBA,MACwB;AACxB,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,eAAe,GAAGZ,WAAW,CAACE,qBAAD,CAAnC;;AAFwB,mBAGIG,SAAS,CAAC;AACpCG,IAAAA,SAAS,EAATA,SADoC;AAEpCC,IAAAA,SAAS,EAATA,SAFoC;AAGpCI,IAAAA,oBAAoB,EAAED,eAAe,CAACC;AAHF,GAAD,CAHb;AAAA,MAGhBC,MAHgB,cAGhBA,MAHgB;AAAA,MAGRC,OAHQ,cAGRA,OAHQ;;AASxB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCL,IAAAA,QAAQ,CAACV,iBAAiB,CAACgB,0BAAlB,EAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCP,IAAAA,QAAQ,CAACV,iBAAiB,CAACkB,yBAAlB,EAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAGV,MAAM,GAAGJ,UAAU,CAACI,MAAD,CAAb,GAAwB,IAAnD;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEI,MAAnB;AAA2B,IAAA,QAAQ,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD;AACE,IAAA,cAAc,EAAEC,oBADlB;AAEE,IAAA,aAAa,EAAEE,mBAFjB;AAGE,IAAA,mBAAmB,EAAEN,eAAe,CAACS,mBAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGZ,SAAS,GACR,MAAC,QAAD;AACE,mBAAY,oBADd;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,OAAO,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GAQR,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,SAAtB;AAAiC,IAAA,MAAM,EAAEY,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,CADF,CADF;AAsBD,CA7CM;;GAAMb,a;UAKMR,W,EACOC,W,EACIK,S;;;KAPjBE,a","sourcesContent":["import { AppBar, Toolbar } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { Track } from '~/entities';\nimport { GameDrawerToggleButton } from '../GameDrawerToggleButton';\nimport { TrackTabs } from '../TrackTabs';\nimport { useStyles } from './GameTracksBar.styles';\nimport { sortTracks } from './sort-tracks';\n\ninterface GameTracksBarProps {\n  isLoading: boolean;\n  gameColor?: string;\n  tracks?: Track[];\n}\n\nexport const GameTracksBar = ({\n  gameColor,\n  isLoading,\n  tracks\n}: GameTracksBarProps) => {\n  const dispatch = useDispatch();\n  const activeGameState = useSelector(selectActiveGameState);\n  const { appBar, toolBar } = useStyles({\n    gameColor,\n    isLoading,\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  });\n\n  const toggleDesktopSidenav = () => {\n    dispatch(activeGameActions.toggleIsDesktopSidenavOpen());\n  };\n\n  const toggleMobileSidenav = () => {\n    dispatch(activeGameActions.toggleIsMobileSidenavOpen());\n  };\n\n  const sortedTracks = tracks ? sortTracks(tracks) : null;\n\n  return (\n    <AppBar className={appBar} position=\"relative\">\n      <Toolbar className={toolBar}>\n        <GameDrawerToggleButton\n          onDesktopClick={toggleDesktopSidenav}\n          onMobileClick={toggleMobileSidenav}\n          isMobileSidenavOpen={activeGameState.isMobileSidenavOpen}\n        />\n\n        {isLoading ? (\n          <Skeleton\n            data-testid=\"track-tabs-loading\"\n            width=\"100%\"\n            height={36}\n            variant=\"rect\"\n          />\n        ) : (\n          <TrackTabs gameColor={gameColor} tracks={sortedTracks} />\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}