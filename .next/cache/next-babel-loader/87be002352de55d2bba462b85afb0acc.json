{"ast":null,"code":"var _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/game/[friendlyId]/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Toolbar, makeStyles } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { GameNavBar, GameSidenav, GameTracksBar, LeaderboardOutlet } from '~/components/game';\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { getActiveGameDetails } from '~/queries/get-active-game-details.query';\nimport { gameDrawerWidth } from '~/models/game-drawer-width';\nconst useStyles = makeStyles(theme => ({\n  content: props => ({\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: props.isDesktopSidenavOpen ? 'initial' : -gameDrawerWidth,\n    // -260px\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 'initial'\n    }\n  }),\n  toolBar: {\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 54\n    }\n  }\n}));\n\nconst GamePage = () => {\n  const router = useRouter();\n  const {\n    friendlyId\n  } = router.query;\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getActiveGameDetails, {\n    variables: {\n      id: friendlyId\n    }\n  });\n  useEffect(() => {\n    if (data === null || data === void 0 ? void 0 : data.game) {\n      dispatch(activeGameActions.setGameDetails({\n        color: data.game.color,\n        name: data.game.name\n      }));\n    }\n  }, [data]);\n  const activeGameState = useSelector(selectActiveGameState);\n  const {\n    content,\n    toolBar\n  } = useStyles({\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  });\n  return __jsx(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(GameNavBar, {\n    gameColor: data === null || data === void 0 ? void 0 : data.game.color,\n    gameName: data === null || data === void 0 ? void 0 : data.game.name,\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), __jsx(GameSidenav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    className: toolBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(GameTracksBar, {\n    gameColor: data === null || data === void 0 ? void 0 : data.game.color,\n    tracks: data === null || data === void 0 ? void 0 : data.game.tracks,\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), activeGameState.selectedTrackId && __jsx(LeaderboardOutlet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  })));\n};\n\nGamePage.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'game']\n});\n\nexport default GamePage;","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/game/[friendlyId]/index.tsx"],"names":["Toolbar","makeStyles","useQuery","useEffect","useDispatch","useSelector","useRouter","GameNavBar","GameSidenav","GameTracksBar","LeaderboardOutlet","activeGameActions","selectActiveGameState","getActiveGameDetails","gameDrawerWidth","useStyles","theme","content","props","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","isDesktopSidenavOpen","breakpoints","down","toolBar","minHeight","GamePage","router","friendlyId","query","dispatch","loading","error","data","variables","id","game","setGameDetails","color","name","activeGameState","tracks","selectedTrackId","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import { Toolbar, makeStyles, Theme } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\n\nimport {\n  GameNavBar,\n  GameSidenav,\n  GameTracksBar,\n  LeaderboardOutlet\n} from '~/components/game';\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { getActiveGameDetails } from '~/queries/get-active-game-details.query';\nimport { Game } from '~/entities';\nimport { gameDrawerWidth } from '~/models/game-drawer-width';\n\ninterface StyleProps {\n  isDesktopSidenavOpen: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => ({\n  content: (props) => ({\n    flexGrow: 1,\n\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n\n    marginLeft: props.isDesktopSidenavOpen ? 'initial' : -gameDrawerWidth, // -260px\n\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 'initial'\n    }\n  }),\n\n  toolBar: {\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 54\n    }\n  }\n}));\n\nconst GamePage = () => {\n  const router = useRouter();\n  const { friendlyId } = router.query;\n\n  const dispatch = useDispatch();\n  const { loading, error, data } = useQuery<{ game: Game }>(\n    getActiveGameDetails,\n    {\n      variables: {\n        id: friendlyId\n      }\n    }\n  );\n\n  useEffect(() => {\n    if (data?.game) {\n      dispatch(\n        activeGameActions.setGameDetails({\n          color: data.game.color,\n          name: data.game.name\n        })\n      );\n    }\n  }, [data]);\n\n  const activeGameState = useSelector(selectActiveGameState);\n  const { content, toolBar } = useStyles({\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  });\n\n  return (\n    <div className=\"d-flex\">\n      <GameNavBar\n        gameColor={data?.game.color}\n        gameName={data?.game.name}\n        isLoading={loading}\n      />\n\n      <GameSidenav />\n\n      <main className={content}>\n        <Toolbar className={toolBar} />\n        <GameTracksBar\n          gameColor={data?.game.color}\n          tracks={data?.game.tracks}\n          isLoading={loading}\n        />\n\n        {activeGameState.selectedTrackId && <LeaderboardOutlet />}\n      </main>\n    </div>\n  );\n};\n\nGamePage.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'game']\n});\n\nexport default GamePage;\n"]},"metadata":{},"sourceType":"module"}