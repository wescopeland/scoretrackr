{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/GamePicker/GamePicker.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Paper, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport React from 'react';\nimport { useStyles } from './GamePicker.styles';\nexport var GamePicker = function GamePicker(_ref) {\n  _s();\n\n  var gameColor = _ref.gameColor,\n      gameName = _ref.gameName,\n      isLoading = _ref.isLoading;\n  var classes = useStyles({\n    gameColor: gameColor,\n    isLoading: isLoading\n  });\n  var gameLetter = gameName ? gameName[0] : '';\n  return __jsx(Paper, {\n    className: classes.root,\n    role: \"button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.gameLetterContainer,\n    \"data-testid\": \"game-identifier\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    className: classes.gameLetterText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, gameLetter)), __jsx(\"div\", {\n    className: classes.gameNameContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, isLoading ? __jsx(Skeleton, {\n    \"data-testid\": \"game-picker-loading\",\n    className: classes.loadingSkeleton,\n    width: 140,\n    height: 20,\n    variant: \"rect\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }) : __jsx(Typography, {\n    className: classes.gameNameText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, gameName)));\n};\n\n_s(GamePicker, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = GamePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePicker\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/GamePicker/GamePicker.tsx"],"names":["Paper","Typography","Skeleton","React","useStyles","GamePicker","gameColor","gameName","isLoading","classes","gameLetter","root","gameLetterContainer","gameLetterText","gameNameContainer","loadingSkeleton","gameNameText"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAQA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAIH;AAAA;;AAAA,MAHrBC,SAGqB,QAHrBA,SAGqB;AAAA,MAFrBC,QAEqB,QAFrBA,QAEqB;AAAA,MADrBC,SACqB,QADrBA,SACqB;AACrB,MAAMC,OAAO,GAAGL,SAAS,CAAC;AAAEE,IAAAA,SAAS,EAATA,SAAF;AAAaE,IAAAA,SAAS,EAATA;AAAb,GAAD,CAAzB;AAEA,MAAME,UAAU,GAAGH,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAX,GAAiB,EAA5C;AAEA,SACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEE,OAAO,CAACE,IAA1B;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEF,OAAO,CAACG,mBADrB;AAEE,mBAAY,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEH,OAAO,CAACI,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgDH,UAAhD,CAJF,CADF,EAQE;AAAK,IAAA,SAAS,EAAED,OAAO,CAACK,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,GACR,MAAC,QAAD;AACE,mBAAY,qBADd;AAEE,IAAA,SAAS,EAAEC,OAAO,CAACM,eAFrB;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,MAAM,EAAE,EAJV;AAKE,IAAA,OAAO,EAAC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,GASR,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEN,OAAO,CAACO,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CT,QAA9C,CAVJ,CARF,CADF;AAwBD,CAjCM;;GAAMF,U;UAKKD,S;;;KALLC,U","sourcesContent":["import { Paper, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport React from 'react';\n\nimport { useStyles } from './GamePicker.styles';\n\ninterface GamePickerProps {\n  isLoading: boolean;\n  gameColor?: string;\n  gameName?: string;\n}\n\nexport const GamePicker = ({\n  gameColor,\n  gameName,\n  isLoading\n}: GamePickerProps) => {\n  const classes = useStyles({ gameColor, isLoading });\n\n  const gameLetter = gameName ? gameName[0] : '';\n\n  return (\n    <Paper className={classes.root} role=\"button\">\n      <div\n        className={classes.gameLetterContainer}\n        data-testid=\"game-identifier\"\n      >\n        <Typography className={classes.gameLetterText}>{gameLetter}</Typography>\n      </div>\n\n      <div className={classes.gameNameContainer}>\n        {isLoading ? (\n          <Skeleton\n            data-testid=\"game-picker-loading\"\n            className={classes.loadingSkeleton}\n            width={140}\n            height={20}\n            variant=\"rect\"\n          />\n        ) : (\n          <Typography className={classes.gameNameText}>{gameName}</Typography>\n        )}\n      </div>\n    </Paper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}