{"ast":null,"code":"var _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/LeaderboardTable/LeaderboardTable.tsx\";\nvar __jsx = React.createElement;\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useStyles } from './LeaderboardTable.styles';\nimport { LeaderboardTableRow } from './LeaderboardTableRow';\nimport { SpacerRow } from './SpacerRow';\nexport const LeaderboardTable = ({\n  activeGameColor,\n  canShowColors,\n  scores\n}) => {\n  const {\n    t\n  } = useTranslation('game');\n  const classes = useStyles();\n  return __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    \"aria-label\": t('leaderboard.ariaLabel'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"#\"), __jsx(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, t('leaderboard.header.player')), __jsx(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, t('leaderboard.header.score')), __jsx(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, t('leaderboard.header.date')), __jsx(TableCell, {\n    className: classes.tableCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, t('leaderboard.header.platform')))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, scores.map((score, index) => {\n    var _scores$;\n\n    return __jsx(Fragment, {\n      key: score.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, index === 10 && __jsx(SpacerRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 34\n      }\n    }), __jsx(LeaderboardTableRow, {\n      activeGameColor: activeGameColor,\n      canShowRowsWithColoredBackgrounds: canShowColors,\n      currentScore: score,\n      firstPlaceScore: scores[0].finalScore,\n      tenthPlaceScore: (_scores$ = scores[9]) === null || _scores$ === void 0 ? void 0 : _scores$.finalScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }))));\n};","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/LeaderboardTable/LeaderboardTable.tsx"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","Fragment","useTranslation","useStyles","LeaderboardTableRow","SpacerRow","LeaderboardTable","activeGameColor","canShowColors","scores","t","classes","tableCell","map","score","index","id","finalScore"],"mappings":";;AAAA,SACEA,KADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,cALF,EAMEC,SANF,EAOEC,QAPF,QAQO,mBARP;AASA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAQA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,eAD+B;AAE/BC,EAAAA,aAF+B;AAG/BC,EAAAA;AAH+B,CAAD,KAIH;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,CAAC,MAAD,CAA5B;AACA,QAAMS,OAAO,GAAGR,SAAS,EAAzB;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAEV,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,kBAAYiB,CAAC,CAAC,uBAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAED,OAAO,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,2BAAD,CADJ,CAFF,EAKE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,0BAAD,CADJ,CALF,EAQE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,yBAAD,CADJ,CARF,EAWE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,OAAO,CAACC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,6BAAD,CADJ,CAXF,CADF,CADF,EAmBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AAC5B,WACE,MAAC,QAAD;AAAU,MAAA,GAAG,EAAED,KAAK,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,KAAK,EAAV,IAAgB,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEE,MAAC,mBAAD;AACE,MAAA,eAAe,EAAER,eADnB;AAEE,MAAA,iCAAiC,EAAEC,aAFrC;AAGE,MAAA,YAAY,EAAEM,KAHhB;AAIE,MAAA,eAAe,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUQ,UAJ7B;AAKE,MAAA,eAAe,cAAER,MAAM,CAAC,CAAD,CAAR,6CAAE,SAAWQ,UAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD,GAbA,CADH,CAnBF,CADF,CADF;AAwCD,CAhDM","sourcesContent":["import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Score } from '~/entities';\nimport { useStyles } from './LeaderboardTable.styles';\nimport { LeaderboardTableRow } from './LeaderboardTableRow';\nimport { SpacerRow } from './SpacerRow';\n\ninterface LeaderboardTableProps {\n  activeGameColor: string;\n  canShowColors: boolean;\n  scores: Score[];\n}\n\nexport const LeaderboardTable = ({\n  activeGameColor,\n  canShowColors,\n  scores\n}: LeaderboardTableProps) => {\n  const { t } = useTranslation('game');\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label={t('leaderboard.ariaLabel')}>\n        <TableHead>\n          <TableRow>\n            <TableCell className={classes.tableCell}>#</TableCell>\n            <TableCell className={classes.tableCell}>\n              {t('leaderboard.header.player')}\n            </TableCell>\n            <TableCell className={classes.tableCell}>\n              {t('leaderboard.header.score')}\n            </TableCell>\n            <TableCell className={classes.tableCell}>\n              {t('leaderboard.header.date')}\n            </TableCell>\n            <TableCell className={classes.tableCell}>\n              {t('leaderboard.header.platform')}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {scores.map((score, index) => {\n            return (\n              <Fragment key={score.id}>\n                {index === 10 && <SpacerRow />}\n                <LeaderboardTableRow\n                  activeGameColor={activeGameColor}\n                  canShowRowsWithColoredBackgrounds={canShowColors}\n                  currentScore={score}\n                  firstPlaceScore={scores[0].finalScore}\n                  tenthPlaceScore={scores[9]?.finalScore}\n                />\n              </Fragment>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}