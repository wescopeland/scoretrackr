{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/home/MostRecentSubmissions/MostRecentSubmissions.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Box, Typography } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport React from 'react';\nimport { useTranslation } from '~/i18n';\nimport { EmptyState } from '~/components/shared/EmptyState';\nimport { getMostRecentSubmissionsQuery } from '~/queries/get-most-recent-submissions.query';\nimport { getDateDistanceText } from '~/utils/get-date-distance-text';\nimport { RecentSubmission } from '../RecentSubmission';\nimport { RecentSubmissionLoadingSkeleton } from '../RecentSubmissionLoadingSkeleton';\nexport var MostRecentSubmissions = function MostRecentSubmissions() {\n  _s();\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  var _useQuery = useQuery(getMostRecentSubmissionsQuery, {\n    variables: {\n      limitToDays: 4\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, loading ? __jsx(RecentSubmissionLoadingSkeleton, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }) : data.recentSubmissions.length ? data.recentSubmissions.map(function (recentSubmission, index) {\n    return __jsx(\"div\", {\n      key: recentSubmission.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      variant: \"subtitle1\",\n      className: \"mb-1 \".concat(index !== 0 && 'mt-5'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, getDateDistanceText(recentSubmission.date, t('dates.today'))), recentSubmission.submissions.map(function (submission) {\n      return __jsx(Box, {\n        key: \"\".concat(submission.game, \" \").concat(submission.playerAlias, \" \").concat(submission.finalScore),\n        marginBottom: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, __jsx(RecentSubmission, {\n        gameColor: submission.game.color,\n        gameId: submission.game.id,\n        gameName: submission.game.name,\n        trackName: submission.track.name,\n        playerAlias: submission.playerAlias,\n        score: submission.finalScore,\n        position: submission.position,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }));\n    }));\n  }) : __jsx(EmptyState, {\n    heading: t('recentSubmissions.none.heading'),\n    label: t('recentSubmissions.none.label'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(MostRecentSubmissions, \"3Wz+laYPgA9ZFdjtq6f8G5TKTOY=\", false, function () {\n  return [useTranslation, useQuery];\n});\n\n_c = MostRecentSubmissions;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostRecentSubmissions\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/home/MostRecentSubmissions/MostRecentSubmissions.tsx"],"names":["Box","Typography","useQuery","React","useTranslation","EmptyState","getMostRecentSubmissionsQuery","getDateDistanceText","RecentSubmission","RecentSubmissionLoadingSkeleton","MostRecentSubmissions","t","variables","limitToDays","loading","error","data","recentSubmissions","length","map","recentSubmission","index","date","submissions","submission","game","playerAlias","finalScore","color","id","name","track","position"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,UAAT,QAA2B,gCAA3B;AAEA,SAASC,6BAAT,QAA8C,6CAA9C;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,+BAAT,QAAgD,oCAAhD;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAAA;;AAAA,wBAC3BN,cAAc,CAAC,QAAD,CADa;AAAA,MACjCO,CADiC,mBACjCA,CADiC;;AAAA,kBAGRT,QAAQ,CAEtCI,6BAFsC,EAEP;AAChCM,IAAAA,SAAS,EAAE;AACTC,MAAAA,WAAW,EAAE;AADJ;AADqB,GAFO,CAHA;AAAA,MAGjCC,OAHiC,aAGjCA,OAHiC;AAAA,MAGxBC,KAHwB,aAGxBA,KAHwB;AAAA,MAGjBC,IAHiB,aAGjBA,IAHiB;;AAWzC,SACE,4BACGF,OAAO,GACN,MAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJE,IAAI,CAACC,iBAAL,CAAuBC,MAAvB,GACFF,IAAI,CAACC,iBAAL,CAAuBE,GAAvB,CAA2B,UAACC,gBAAD,EAAmBC,KAAnB;AAAA,WACzB;AAAK,MAAA,GAAG,EAAED,gBAAgB,CAACE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,SAAS,iBAAUD,KAAK,KAAK,CAAV,IAAe,MAAzB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGd,mBAAmB,CAACa,gBAAgB,CAACE,IAAlB,EAAwBX,CAAC,CAAC,aAAD,CAAzB,CAJtB,CADF,EAQGS,gBAAgB,CAACG,WAAjB,CAA6BJ,GAA7B,CAAiC,UAACK,UAAD;AAAA,aAChC,MAAC,GAAD;AACE,QAAA,GAAG,YAAKA,UAAU,CAACC,IAAhB,cAAwBD,UAAU,CAACE,WAAnC,cAAkDF,UAAU,CAACG,UAA7D,CADL;AAEE,QAAA,YAAY,EAAE,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,MAAC,gBAAD;AACE,QAAA,SAAS,EAAEH,UAAU,CAACC,IAAX,CAAgBG,KAD7B;AAEE,QAAA,MAAM,EAAEJ,UAAU,CAACC,IAAX,CAAgBI,EAF1B;AAGE,QAAA,QAAQ,EAAEL,UAAU,CAACC,IAAX,CAAgBK,IAH5B;AAIE,QAAA,SAAS,EAAEN,UAAU,CAACO,KAAX,CAAiBD,IAJ9B;AAKE,QAAA,WAAW,EAAEN,UAAU,CAACE,WAL1B;AAME,QAAA,KAAK,EAAEF,UAAU,CAACG,UANpB;AAOE,QAAA,QAAQ,EAAEH,UAAU,CAACQ,QAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADgC;AAAA,KAAjC,CARH,CADyB;AAAA,GAA3B,CADE,GA6BF,MAAC,UAAD;AACE,IAAA,OAAO,EAAErB,CAAC,CAAC,gCAAD,CADZ;AAEE,IAAA,KAAK,EAAEA,CAAC,CAAC,8BAAD,CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADF;AAwCD,CAnDM;;GAAMD,qB;UACGN,c,EAEmBF,Q;;;KAHtBQ,qB","sourcesContent":["import { Box, Typography } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport React from 'react';\n\nimport { useTranslation } from '~/i18n';\nimport { EmptyState } from '~/components/shared/EmptyState';\nimport { SubmissionBlob } from '~/models/submission-blob.model';\nimport { getMostRecentSubmissionsQuery } from '~/queries/get-most-recent-submissions.query';\nimport { getDateDistanceText } from '~/utils/get-date-distance-text';\nimport { RecentSubmission } from '../RecentSubmission';\nimport { RecentSubmissionLoadingSkeleton } from '../RecentSubmissionLoadingSkeleton';\n\nexport const MostRecentSubmissions = () => {\n  const { t } = useTranslation('common');\n\n  const { loading, error, data } = useQuery<{\n    recentSubmissions: SubmissionBlob[];\n  }>(getMostRecentSubmissionsQuery, {\n    variables: {\n      limitToDays: 4\n    }\n  });\n\n  return (\n    <>\n      {loading ? (\n        <RecentSubmissionLoadingSkeleton />\n      ) : data.recentSubmissions.length ? (\n        data.recentSubmissions.map((recentSubmission, index) => (\n          <div key={recentSubmission.date}>\n            <Typography\n              variant=\"subtitle1\"\n              className={`mb-1 ${index !== 0 && 'mt-5'}`}\n            >\n              {getDateDistanceText(recentSubmission.date, t('dates.today'))}\n            </Typography>\n\n            {recentSubmission.submissions.map((submission) => (\n              <Box\n                key={`${submission.game} ${submission.playerAlias} ${submission.finalScore}`}\n                marginBottom={2}\n              >\n                <RecentSubmission\n                  gameColor={submission.game.color}\n                  gameId={submission.game.id}\n                  gameName={submission.game.name}\n                  trackName={submission.track.name}\n                  playerAlias={submission.playerAlias}\n                  score={submission.finalScore}\n                  position={submission.position}\n                />\n              </Box>\n            ))}\n          </div>\n        ))\n      ) : (\n        <EmptyState\n          heading={t('recentSubmissions.none.heading')}\n          label={t('recentSubmissions.none.label')}\n        />\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}