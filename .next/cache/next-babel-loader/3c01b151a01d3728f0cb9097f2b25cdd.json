{"ast":null,"code":"import { getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducer';\n\nconst configureStore = preloadedState => {\n  const composeEnhancers = composeWithDevTools({});\n  let store;\n\n  if (preloadedState) {\n    store = createStore(rootReducer, preloadedState, composeEnhancers(applyMiddleware(...getDefaultMiddleware())));\n  } else {\n    store = createStore(rootReducer, composeEnhancers(applyMiddleware(...getDefaultMiddleware())));\n  }\n\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/state/store.ts"],"names":["getDefaultMiddleware","applyMiddleware","createStore","composeWithDevTools","rootReducer","configureStore","preloadedState","composeEnhancers","store"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,kBAArC;AACA,SAASC,eAAT,EAAyCC,WAAzC,QAA4D,OAA5D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAsC,WAAtC;;AAEA,MAAMC,cAAc,GAAIC,cAAD,IAA+B;AACpD,QAAMC,gBAAgB,GAAGJ,mBAAmB,CAAC,EAAD,CAA5C;AAEA,MAAIK,KAAJ;;AACA,MAAIF,cAAJ,EAAoB;AAClBE,IAAAA,KAAK,GAAGN,WAAW,CACjBE,WADiB,EAEjBE,cAFiB,EAGjBC,gBAAgB,CAACN,eAAe,CAAC,GAAGD,oBAAoB,EAAxB,CAAhB,CAHC,CAAnB;AAKD,GAND,MAMO;AACLQ,IAAAA,KAAK,GAAGN,WAAW,CACjBE,WADiB,EAEjBG,gBAAgB,CAACN,eAAe,CAAC,GAAGD,oBAAoB,EAAxB,CAAhB,CAFC,CAAnB;AAID;;AAED,SAAOQ,KAAP;AACD,CAlBD;;AAoBA,eAAeH,cAAf","sourcesContent":["import { getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { applyMiddleware, CombinedState, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer, { AppState } from './reducer';\n\nconst configureStore = (preloadedState?: AppState) => {\n  const composeEnhancers = composeWithDevTools({});\n\n  let store: CombinedState<any>;\n  if (preloadedState) {\n    store = createStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(applyMiddleware(...getDefaultMiddleware()))\n    );\n  } else {\n    store = createStore(\n      rootReducer,\n      composeEnhancers(applyMiddleware(...getDefaultMiddleware()))\n    );\n  }\n\n  return store;\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}