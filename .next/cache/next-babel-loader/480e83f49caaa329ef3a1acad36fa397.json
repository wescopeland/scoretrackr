{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/Leaderboard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectActiveGameColor } from '~/state/active-game';\nimport { LeaderboardCard } from './LeaderboardCard';\nimport { LeaderboardTable } from './LeaderboardTable';\nexport var Leaderboard = function Leaderboard(_ref) {\n  _s();\n\n  var scores = _ref.scores;\n  var theme = useTheme();\n  var isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  var activeGameColor = useSelector(selectActiveGameColor);\n  var canShowLeaderboardColors = scores.length > 10;\n\n  var mobileTemplate = __jsx(React.Fragment, null, scores.map(function (score) {\n    return __jsx(\"div\", {\n      key: score.id,\n      className: \"row mt-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(LeaderboardCard, {\n      activeGameColor: activeGameColor,\n      currentScore: score,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    })));\n  }));\n\n  var desktopTemplate = __jsx(LeaderboardTable, {\n    activeGameColor: activeGameColor,\n    canShowColors: canShowLeaderboardColors,\n    scores: scores,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n\n  return isMobile ? mobileTemplate : desktopTemplate;\n};\n\n_s(Leaderboard, \"b2LuMIZnFx64wukAUjic8IHtIXg=\", false, function () {\n  return [useTheme, useMediaQuery, useSelector];\n});\n\n_c = Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/Leaderboard.tsx"],"names":["useMediaQuery","useTheme","React","useSelector","selectActiveGameColor","LeaderboardCard","LeaderboardTable","Leaderboard","scores","theme","isMobile","breakpoints","down","activeGameColor","canShowLeaderboardColors","length","mobileTemplate","map","score","id","desktopTemplate"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,mBAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,qBAAT,QAAsC,qBAAtC;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkC;AAAA;;AAAA,MAA/BC,MAA+B,QAA/BA,MAA+B;AAC3D,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,MAAMS,QAAQ,GAAGV,aAAa,CAACS,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B;AACA,MAAMC,eAAe,GAAGV,WAAW,CAACC,qBAAD,CAAnC;AAEA,MAAMU,wBAAwB,GAAGN,MAAM,CAACO,MAAP,GAAgB,EAAjD;;AAEA,MAAMC,cAAc,GAClB,4BACGR,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD;AAAA,WACV;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,MAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,eAAD;AACE,MAAA,eAAe,EAAEN,eADnB;AAEE,MAAA,YAAY,EAAEK,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADU;AAAA,GAAX,CADH,CADF;;AAeA,MAAME,eAAe,GACnB,MAAC,gBAAD;AACE,IAAA,eAAe,EAAEP,eADnB;AAEE,IAAA,aAAa,EAAEC,wBAFjB;AAGE,IAAA,MAAM,EAAEN,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;;AAQA,SAAOE,QAAQ,GAAGM,cAAH,GAAoBI,eAAnC;AACD,CA/BM;;GAAMb,W;UACGN,Q,EACGD,a,EACOG,W;;;KAHbI,W","sourcesContent":["import { useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectActiveGameColor } from '~/state/active-game';\nimport { Score } from '~/entities';\nimport { LeaderboardCard } from './LeaderboardCard';\nimport { LeaderboardTable } from './LeaderboardTable';\n\ninterface LeaderboardProps {\n  scores: Score[];\n}\n\nexport const Leaderboard = ({ scores }: LeaderboardProps) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const activeGameColor = useSelector(selectActiveGameColor);\n\n  const canShowLeaderboardColors = scores.length > 10;\n\n  const mobileTemplate = (\n    <>\n      {scores.map((score) => (\n        <div key={score.id} className=\"row mt-4\">\n          <div className=\"col\">\n            <LeaderboardCard\n              activeGameColor={activeGameColor}\n              currentScore={score}\n            />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n\n  const desktopTemplate = (\n    <LeaderboardTable\n      activeGameColor={activeGameColor}\n      canShowColors={canShowLeaderboardColors}\n      scores={scores}\n    />\n  );\n\n  return isMobile ? mobileTemplate : desktopTemplate;\n};\n"]},"metadata":{},"sourceType":"module"}