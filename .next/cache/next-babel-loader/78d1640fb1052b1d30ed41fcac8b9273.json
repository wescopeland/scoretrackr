{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/game/[friendlyId]/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Toolbar, makeStyles } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { GameNavBar, GameSidenav, GameTracksBar, LeaderboardOutlet } from '~/components/game';\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { getActiveGameDetails } from '~/queries/get-active-game-details.query';\nimport { gameDrawerWidth } from '~/models/game-drawer-width';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    content: function content(props) {\n      return _defineProperty({\n        flexGrow: 1,\n        transition: theme.transitions.create('margin', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen\n        }),\n        marginLeft: props.isDesktopSidenavOpen ? 'initial' : -gameDrawerWidth\n      }, theme.breakpoints.down('sm'), {\n        marginLeft: 'initial'\n      });\n    },\n    toolBar: _defineProperty({}, theme.breakpoints.down('xs'), {\n      minHeight: 54\n    })\n  };\n});\n\nvar GamePage = function GamePage() {\n  _s();\n\n  var router = useRouter();\n  var friendlyId = router.query.friendlyId;\n  var dispatch = useDispatch();\n\n  var _useQuery = useQuery(getActiveGameDetails, {\n    variables: {\n      id: friendlyId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  useEffect(function () {\n    if (data === null || data === void 0 ? void 0 : data.game) {\n      dispatch(activeGameActions.setGameDetails({\n        color: data.game.color,\n        name: data.game.name\n      }));\n    }\n  }, [data]);\n  var activeGameState = useSelector(selectActiveGameState);\n\n  var _useStyles = useStyles({\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  }),\n      content = _useStyles.content,\n      toolBar = _useStyles.toolBar;\n\n  return __jsx(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(GameNavBar, {\n    gameColor: data === null || data === void 0 ? void 0 : data.game.color,\n    gameName: data === null || data === void 0 ? void 0 : data.game.name,\n    isLoading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), __jsx(GameSidenav, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    className: toolBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(GameTracksBar, {\n    gameColor: data === null || data === void 0 ? void 0 : data.game.color,\n    tracks: data === null || data === void 0 ? void 0 : data.game.tracks,\n    isLoading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), activeGameState.selectedTrackId && __jsx(LeaderboardOutlet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  })));\n};\n\n_s(GamePage, \"ApVps/CYBCFrwX5xw8PxChzYLlQ=\", false, function () {\n  return [useRouter, useDispatch, useQuery, useSelector, useStyles];\n});\n\n_c = GamePage;\nGamePage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: ['common', 'game']\n          });\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/game/[friendlyId]/index.tsx"],"names":["Toolbar","makeStyles","useQuery","useEffect","useDispatch","useSelector","useRouter","GameNavBar","GameSidenav","GameTracksBar","LeaderboardOutlet","activeGameActions","selectActiveGameState","getActiveGameDetails","gameDrawerWidth","useStyles","theme","content","props","flexGrow","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","isDesktopSidenavOpen","breakpoints","down","toolBar","minHeight","GamePage","router","friendlyId","query","dispatch","variables","id","loading","error","data","game","setGameDetails","color","name","activeGameState","tracks","selectedTrackId","getInitialProps","namespacesRequired"],"mappings":"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","sourcesContent":["import { Toolbar, makeStyles, Theme } from '@material-ui/core';\nimport { useQuery } from 'graphql-hooks';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\n\nimport {\n  GameNavBar,\n  GameSidenav,\n  GameTracksBar,\n  LeaderboardOutlet\n} from '~/components/game';\nimport { activeGameActions, selectActiveGameState } from '~/state/active-game';\nimport { getActiveGameDetails } from '~/queries/get-active-game-details.query';\nimport { Game } from '~/entities';\nimport { gameDrawerWidth } from '~/models/game-drawer-width';\n\ninterface StyleProps {\n  isDesktopSidenavOpen: boolean;\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>((theme: Theme) => ({\n  content: (props) => ({\n    flexGrow: 1,\n\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n\n    marginLeft: props.isDesktopSidenavOpen ? 'initial' : -gameDrawerWidth, // -260px\n\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 'initial'\n    }\n  }),\n\n  toolBar: {\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 54\n    }\n  }\n}));\n\nconst GamePage = () => {\n  const router = useRouter();\n  const { friendlyId } = router.query;\n\n  const dispatch = useDispatch();\n  const { loading, error, data } = useQuery<{ game: Game }>(\n    getActiveGameDetails,\n    {\n      variables: {\n        id: friendlyId\n      }\n    }\n  );\n\n  useEffect(() => {\n    if (data?.game) {\n      dispatch(\n        activeGameActions.setGameDetails({\n          color: data.game.color,\n          name: data.game.name\n        })\n      );\n    }\n  }, [data]);\n\n  const activeGameState = useSelector(selectActiveGameState);\n  const { content, toolBar } = useStyles({\n    isDesktopSidenavOpen: activeGameState.isDesktopSidenavOpen\n  });\n\n  return (\n    <div className=\"d-flex\">\n      <GameNavBar\n        gameColor={data?.game.color}\n        gameName={data?.game.name}\n        isLoading={loading}\n      />\n\n      <GameSidenav />\n\n      <main className={content}>\n        <Toolbar className={toolBar} />\n        <GameTracksBar\n          gameColor={data?.game.color}\n          tracks={data?.game.tracks}\n          isLoading={loading}\n        />\n\n        {activeGameState.selectedTrackId && <LeaderboardOutlet />}\n      </main>\n    </div>\n  );\n};\n\nGamePage.getInitialProps = async () => ({\n  namespacesRequired: ['common', 'game']\n});\n\nexport default GamePage;\n"]},"metadata":{},"sourceType":"module"}