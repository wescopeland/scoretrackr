{"ast":null,"code":"var _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/TrackTabs/TrackTabs.tsx\";\nvar __jsx = React.createElement;\nimport { Tab, Tabs } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { activeGameActions, selectCurrentTrack } from '~/state/active-game';\nimport { useStyles } from './TrackTabs.styles';\nexport const TrackTabs = ({\n  tracks,\n  gameColor\n}) => {\n  var _currentSelectedTrack;\n\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const currentSelectedTrack = useSelector(selectCurrentTrack);\n  const classes = useStyles({\n    gameColor\n  });\n\n  const findTrackByFriendlyId = trackFriendlyId => {\n    return tracks.find(t => t.friendlyId === trackFriendlyId);\n  };\n\n  const navigateToTrackByFriendlyId = (friendlyId, id) => {\n    const trackId = id !== null && id !== void 0 ? id : findTrackByFriendlyId(friendlyId).id;\n    dispatch(activeGameActions.setSelectedTrack({\n      friendlyId,\n      id: trackId\n    }));\n    const newParams = new URLSearchParams(location.search);\n    newParams.set('track', friendlyId);\n    router.replace({\n      pathname: '/game/[friendlyId]',\n      query: {\n        track: friendlyId\n      }\n    }, {\n      pathname: '/game/dkong',\n      query: {\n        track: friendlyId\n      }\n    });\n  };\n\n  useEffect(() => {\n    var _location, _location$search;\n\n    if ((_location = location) === null || _location === void 0 ? void 0 : (_location$search = _location.search) === null || _location$search === void 0 ? void 0 : _location$search.length) {\n      const queryParams = new URLSearchParams(location.search);\n      const trackFriendlyId = queryParams.get('track');\n      const foundTrack = findTrackByFriendlyId(trackFriendlyId);\n\n      if (trackFriendlyId && foundTrack) {\n        navigateToTrackByFriendlyId(foundTrack.friendlyId);\n      } else {\n        navigateToTrackByFriendlyId(tracks[0].friendlyId, tracks[0].id);\n      }\n    } else {\n      navigateToTrackByFriendlyId(tracks[0].friendlyId, tracks[0].id);\n    }\n  }, []);\n\n  const handleTabChange = (e, newSelectedTrackFriendlyId) => {\n    if (newSelectedTrackFriendlyId !== currentSelectedTrack.friendlyId) {\n      navigateToTrackByFriendlyId(newSelectedTrackFriendlyId);\n    }\n  };\n\n  return __jsx(Tabs, {\n    classes: {\n      root: classes.tabsRoot,\n      indicator: classes.tabsIndicator,\n      scroller: classes.tabsScroller\n    },\n    value: (_currentSelectedTrack = currentSelectedTrack === null || currentSelectedTrack === void 0 ? void 0 : currentSelectedTrack.friendlyId) !== null && _currentSelectedTrack !== void 0 ? _currentSelectedTrack : false,\n    onChange: handleTabChange,\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, tracks.map(track => __jsx(Tab, {\n    key: track.id,\n    classes: {\n      root: classes.tabItemRoot,\n      selected: classes.tabSelected\n    },\n    label: track.name,\n    value: track.friendlyId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/TrackTabs/TrackTabs.tsx"],"names":["Tab","Tabs","React","useEffect","useDispatch","useSelector","useRouter","activeGameActions","selectCurrentTrack","useStyles","TrackTabs","tracks","gameColor","dispatch","router","currentSelectedTrack","classes","findTrackByFriendlyId","trackFriendlyId","find","t","friendlyId","navigateToTrackByFriendlyId","id","trackId","setSelectedTrack","newParams","URLSearchParams","location","search","set","replace","pathname","query","track","length","queryParams","get","foundTrack","handleTabChange","e","newSelectedTrackFriendlyId","root","tabsRoot","indicator","tabsIndicator","scroller","tabsScroller","map","tabItemRoot","selected","tabSelected","name"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,mBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AAOA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA2C;AAAA;;AAClE,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,oBAAoB,GAAGV,WAAW,CAACG,kBAAD,CAAxC;AACA,QAAMQ,OAAO,GAAGP,SAAS,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAzB;;AAEA,QAAMK,qBAAqB,GAAIC,eAAD,IAA6B;AACzD,WAAOP,MAAM,CAACQ,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACC,UAAF,KAAiBH,eAApC,CAAP;AACD,GAFD;;AAIA,QAAMI,2BAA2B,GAAG,CAACD,UAAD,EAAqBE,EAArB,KAAqC;AACvE,UAAMC,OAAO,GAAGD,EAAH,aAAGA,EAAH,cAAGA,EAAH,GAASN,qBAAqB,CAACI,UAAD,CAArB,CAAkCE,EAAxD;AAEAV,IAAAA,QAAQ,CAACN,iBAAiB,CAACkB,gBAAlB,CAAmC;AAAEJ,MAAAA,UAAF;AAAcE,MAAAA,EAAE,EAAEC;AAAlB,KAAnC,CAAD,CAAR;AAEA,UAAME,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,QAAQ,CAACC,MAA7B,CAAlB;AACAH,IAAAA,SAAS,CAACI,GAAV,CAAc,OAAd,EAAuBT,UAAvB;AAEAP,IAAAA,MAAM,CAACiB,OAAP,CACE;AACEC,MAAAA,QAAQ,EAAE,oBADZ;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEb;AADF;AAFT,KADF,EAOE;AACEW,MAAAA,QAAQ,EAAE,aADZ;AAEEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEb;AADF;AAFT,KAPF;AAcD,GAtBD;;AAwBAlB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,qBAAIyB,QAAJ,kEAAI,UAAUC,MAAd,qDAAI,iBAAkBM,MAAtB,EAA8B;AAC5B,YAAMC,WAAW,GAAG,IAAIT,eAAJ,CAAoBC,QAAQ,CAACC,MAA7B,CAApB;AACA,YAAMX,eAAe,GAAGkB,WAAW,CAACC,GAAZ,CAAgB,OAAhB,CAAxB;AAEA,YAAMC,UAAU,GAAGrB,qBAAqB,CAACC,eAAD,CAAxC;;AAEA,UAAIA,eAAe,IAAIoB,UAAvB,EAAmC;AACjChB,QAAAA,2BAA2B,CAACgB,UAAU,CAACjB,UAAZ,CAA3B;AACD,OAFD,MAEO;AACLC,QAAAA,2BAA2B,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUU,UAAX,EAAuBV,MAAM,CAAC,CAAD,CAAN,CAAUY,EAAjC,CAA3B;AACD;AACF,KAXD,MAWO;AACLD,MAAAA,2BAA2B,CAACX,MAAM,CAAC,CAAD,CAAN,CAAUU,UAAX,EAAuBV,MAAM,CAAC,CAAD,CAAN,CAAUY,EAAjC,CAA3B;AACD;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMgB,eAAe,GAAG,CACtBC,CADsB,EAEtBC,0BAFsB,KAGnB;AACH,QAAIA,0BAA0B,KAAK1B,oBAAoB,CAACM,UAAxD,EAAoE;AAClEC,MAAAA,2BAA2B,CAACmB,0BAAD,CAA3B;AACD;AACF,GAPD;;AASA,SACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE1B,OAAO,CAAC2B,QADP;AAEPC,MAAAA,SAAS,EAAE5B,OAAO,CAAC6B,aAFZ;AAGPC,MAAAA,QAAQ,EAAE9B,OAAO,CAAC+B;AAHX,KADX;AAME,IAAA,KAAK,2BAAEhC,oBAAF,aAAEA,oBAAF,uBAAEA,oBAAoB,CAAEM,UAAxB,yEAAsC,KAN7C;AAOE,IAAA,QAAQ,EAAEkB,eAPZ;AAQE,IAAA,OAAO,EAAC,YARV;AASE,IAAA,aAAa,EAAC,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG5B,MAAM,CAACqC,GAAP,CAAYd,KAAD,IACV,MAAC,GAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACX,EADb;AAEE,IAAA,OAAO,EAAE;AACPmB,MAAAA,IAAI,EAAE1B,OAAO,CAACiC,WADP;AAEPC,MAAAA,QAAQ,EAAElC,OAAO,CAACmC;AAFX,KAFX;AAME,IAAA,KAAK,EAAEjB,KAAK,CAACkB,IANf;AAOE,IAAA,KAAK,EAAElB,KAAK,CAACb,UAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAXH,CADF;AAyBD,CArFM","sourcesContent":["import { Tab, Tabs } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\n\nimport { activeGameActions, selectCurrentTrack } from '~/state/active-game';\nimport { Track } from '~/entities';\nimport { useStyles } from './TrackTabs.styles';\n\ninterface TrackTabsProps {\n  tracks: Track[];\n  gameColor: string;\n}\n\nexport const TrackTabs = ({ tracks, gameColor }: TrackTabsProps) => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const currentSelectedTrack = useSelector(selectCurrentTrack);\n  const classes = useStyles({ gameColor });\n\n  const findTrackByFriendlyId = (trackFriendlyId: string) => {\n    return tracks.find((t) => t.friendlyId === trackFriendlyId);\n  };\n\n  const navigateToTrackByFriendlyId = (friendlyId: string, id?: string) => {\n    const trackId = id ?? findTrackByFriendlyId(friendlyId).id;\n\n    dispatch(activeGameActions.setSelectedTrack({ friendlyId, id: trackId }));\n\n    const newParams = new URLSearchParams(location.search);\n    newParams.set('track', friendlyId);\n\n    router.replace(\n      {\n        pathname: '/game/[friendlyId]',\n        query: {\n          track: friendlyId\n        }\n      },\n      {\n        pathname: '/game/dkong',\n        query: {\n          track: friendlyId\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (location?.search?.length) {\n      const queryParams = new URLSearchParams(location.search);\n      const trackFriendlyId = queryParams.get('track');\n\n      const foundTrack = findTrackByFriendlyId(trackFriendlyId);\n\n      if (trackFriendlyId && foundTrack) {\n        navigateToTrackByFriendlyId(foundTrack.friendlyId);\n      } else {\n        navigateToTrackByFriendlyId(tracks[0].friendlyId, tracks[0].id);\n      }\n    } else {\n      navigateToTrackByFriendlyId(tracks[0].friendlyId, tracks[0].id);\n    }\n  }, []);\n\n  const handleTabChange = (\n    e: React.ChangeEvent<{}>,\n    newSelectedTrackFriendlyId: string\n  ) => {\n    if (newSelectedTrackFriendlyId !== currentSelectedTrack.friendlyId) {\n      navigateToTrackByFriendlyId(newSelectedTrackFriendlyId);\n    }\n  };\n\n  return (\n    <Tabs\n      classes={{\n        root: classes.tabsRoot,\n        indicator: classes.tabsIndicator,\n        scroller: classes.tabsScroller\n      }}\n      value={currentSelectedTrack?.friendlyId ?? false}\n      onChange={handleTabChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n    >\n      {tracks.map((track) => (\n        <Tab\n          key={track.id}\n          classes={{\n            root: classes.tabItemRoot,\n            selected: classes.tabSelected\n          }}\n          label={track.name}\n          value={track.friendlyId}\n        />\n      ))}\n    </Tabs>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}