{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/LeaderboardTable/LeaderboardTableRow/LeaderboardTableRow.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { TableCell, TableRow, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport { formatToReadableDate } from '~/utils/format-to-readable-date';\nimport { useStyles as useRootStyles } from '../LeaderboardTable.styles';\nimport { StyledTableRow, useStyles } from './LeaderboardTableRow.styles';\nexport var LeaderboardTableRow = function LeaderboardTableRow(_ref) {\n  _s();\n\n  var activeGameColor = _ref.activeGameColor,\n      canShowRowsWithColoredBackgrounds = _ref.canShowRowsWithColoredBackgrounds,\n      currentScore = _ref.currentScore,\n      firstPlaceScore = _ref.firstPlaceScore,\n      tenthPlaceScore = _ref.tenthPlaceScore;\n  var theme = useTheme();\n\n  var _useRootStyles = useRootStyles(),\n      tableCell = _useRootStyles.tableCell;\n\n  var _useStyles = useStyles(),\n      firstPlaceCellBorder = _useStyles.firstPlaceCellBorder,\n      secondPlaceCellBorder = _useStyles.secondPlaceCellBorder,\n      thirdPlaceCellBorder = _useStyles.thirdPlaceCellBorder;\n\n  var isLightMode = theme.palette.type === 'light';\n  var surfaceColor = theme.palette.background.paper;\n\n  var isColoredBackgroundRow = function isColoredBackgroundRow(position) {\n    return canShowRowsWithColoredBackgrounds && position <= 10;\n  };\n\n  var getColoredLeftBorder = function getColoredLeftBorder(position) {\n    if (position === 1) {\n      return firstPlaceCellBorder;\n    } else if (position === 2) {\n      return secondPlaceCellBorder;\n    } else if (position === 3) {\n      return thirdPlaceCellBorder;\n    }\n\n    return null;\n  };\n\n  var RowComponent = canShowRowsWithColoredBackgrounds && currentScore.position <= 10 ? StyledTableRow : TableRow;\n  return __jsx(RowComponent, {\n    key: currentScore.id,\n    position: currentScore.position,\n    islightmode: String(isLightMode),\n    surfacecolor: surfaceColor,\n    first: isColoredBackgroundRow(currentScore.position) ? firstPlaceScore : undefined,\n    tenth: isColoredBackgroundRow(currentScore.position) ? tenthPlaceScore : undefined,\n    score: isColoredBackgroundRow(currentScore.position) ? currentScore.finalScore : undefined,\n    bgcolor: isColoredBackgroundRow(currentScore.position) ? activeGameColor : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(TableCell, {\n    className: \"\".concat(tableCell, \" \").concat(getColoredLeftBorder(currentScore.position)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, currentScore.position), __jsx(TableCell, {\n    className: tableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, currentScore.playerAlias), __jsx(TableCell, {\n    className: tableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, currentScore.finalScore.toLocaleString()), __jsx(TableCell, {\n    className: tableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, formatToReadableDate(currentScore.submittedAt)), __jsx(TableCell, {\n    className: tableCell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, currentScore.platform));\n};\n\n_s(LeaderboardTableRow, \"W28qDkcFhQozZtVndZExShf/kZI=\", false, function () {\n  return [useTheme, useRootStyles, useStyles];\n});\n\n_c = LeaderboardTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaderboardTableRow\");","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/components/game/Leaderboard/LeaderboardTable/LeaderboardTableRow/LeaderboardTableRow.tsx"],"names":["TableCell","TableRow","useTheme","React","formatToReadableDate","useStyles","useRootStyles","StyledTableRow","LeaderboardTableRow","activeGameColor","canShowRowsWithColoredBackgrounds","currentScore","firstPlaceScore","tenthPlaceScore","theme","tableCell","firstPlaceCellBorder","secondPlaceCellBorder","thirdPlaceCellBorder","isLightMode","palette","type","surfaceColor","background","paper","isColoredBackgroundRow","position","getColoredLeftBorder","RowComponent","id","String","undefined","finalScore","playerAlias","toLocaleString","submittedAt","platform"],"mappings":"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","sourcesContent":["import { TableCell, TableRow, useTheme } from '@material-ui/core';\nimport React from 'react';\n\nimport { Score } from '~/entities';\nimport { formatToReadableDate } from '~/utils/format-to-readable-date';\nimport { useStyles as useRootStyles } from '../LeaderboardTable.styles';\nimport { StyledTableRow, useStyles } from './LeaderboardTableRow.styles';\n\ninterface LeaderboardTableRowProps {\n  activeGameColor: string;\n  canShowRowsWithColoredBackgrounds: boolean;\n  currentScore: Score;\n  firstPlaceScore: number;\n  tenthPlaceScore?: number;\n}\n\nexport const LeaderboardTableRow = ({\n  activeGameColor,\n  canShowRowsWithColoredBackgrounds,\n  currentScore,\n  firstPlaceScore,\n  tenthPlaceScore\n}: LeaderboardTableRowProps) => {\n  const theme = useTheme();\n  const { tableCell } = useRootStyles();\n  const {\n    firstPlaceCellBorder,\n    secondPlaceCellBorder,\n    thirdPlaceCellBorder\n  } = useStyles();\n\n  const isLightMode = theme.palette.type === 'light';\n  const surfaceColor = theme.palette.background.paper;\n\n  const isColoredBackgroundRow = (position: number) => {\n    return canShowRowsWithColoredBackgrounds && position <= 10;\n  };\n\n  const getColoredLeftBorder = (position: number) => {\n    if (position === 1) {\n      return firstPlaceCellBorder;\n    } else if (position === 2) {\n      return secondPlaceCellBorder;\n    } else if (position === 3) {\n      return thirdPlaceCellBorder;\n    }\n\n    return null;\n  };\n\n  const RowComponent =\n    canShowRowsWithColoredBackgrounds && currentScore.position <= 10\n      ? StyledTableRow\n      : TableRow;\n\n  return (\n    <RowComponent\n      key={currentScore.id}\n      position={currentScore.position}\n      islightmode={String(isLightMode)}\n      surfacecolor={surfaceColor}\n      first={\n        isColoredBackgroundRow(currentScore.position)\n          ? firstPlaceScore\n          : undefined\n      }\n      tenth={\n        isColoredBackgroundRow(currentScore.position)\n          ? tenthPlaceScore\n          : undefined\n      }\n      score={\n        isColoredBackgroundRow(currentScore.position)\n          ? currentScore.finalScore\n          : undefined\n      }\n      bgcolor={\n        isColoredBackgroundRow(currentScore.position)\n          ? activeGameColor\n          : undefined\n      }\n    >\n      <TableCell\n        className={`${tableCell} ${getColoredLeftBorder(\n          currentScore.position\n        )}`}\n      >\n        {currentScore.position}\n      </TableCell>\n      <TableCell className={tableCell}>{currentScore.playerAlias}</TableCell>\n      <TableCell className={tableCell}>\n        {currentScore.finalScore.toLocaleString()}\n      </TableCell>\n      <TableCell className={tableCell}>\n        {formatToReadableDate(currentScore.submittedAt)}\n      </TableCell>\n      <TableCell className={tableCell}>{currentScore.platform}</TableCell>\n    </RowComponent>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}