{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { ClientContext } from 'graphql-hooks';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { appWithTranslation } from '~/i18n';\nimport theme from '~/theme';\nimport configureStore from '~/state/store';\nimport { useGraphQLClient } from '~/lib/graphql-client';\nvar store = configureStore();\n\nvar myApp = function myApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var graphQLClient = useGraphQLClient(pageProps.initialGraphQLState);\n  useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Scoretrackr\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), __jsx(ClientContext.Provider, {\n    value: graphQLClient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(ReduxProvider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))))));\n};\n\n_s(myApp, \"VpbYBh4DSsCjvsa/PtEIhR3JQms=\", false, function () {\n  return [useGraphQLClient];\n});\n\nmyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default appWithTranslation(myApp);","map":{"version":3,"sources":["/Users/wescopeland/Documents/github/scoretrackr-original/src/pages/_app.tsx"],"names":["React","useEffect","App","Head","CssBaseline","ThemeProvider","ClientContext","Provider","ReduxProvider","appWithTranslation","theme","configureStore","useGraphQLClient","store","myApp","Component","pageProps","graphQLClient","initialGraphQLState","jssStyles","document","querySelector","parentElement","removeChild","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAA8B,UAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,mBAA3C;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,aAA1C;AAEA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,IAAMC,KAAK,GAAGF,cAAc,EAA5B;;AAEA,IAAMG,KAAK,GAAG,SAARA,KAAQ,OAAwC;AAAA;;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AACpD,MAAMC,aAAa,GAAGL,gBAAgB,CAACI,SAAS,CAACE,mBAAX,CAAtC;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMkB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAC,sDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,MAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEF,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD,eAAeG,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF,CADF,CATF,CADF;AAoBD,CA/BD;;GAAMF,K;UACkBF,gB;;;AAgCxBE,KAAK,CAACU,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCvB,GAAG,CAACsB,eAAJ,CAAoBC,UAApB,CADD;;AAAA;AAChBC,YAAAA,QADgB;AAAA,+DAEVA,QAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAejB,kBAAkB,CAACK,KAAD,CAAjC","sourcesContent":["import React, { useEffect } from 'react';\nimport App, { AppProps } from 'next/app';\nimport Head from 'next/head';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { ClientContext } from 'graphql-hooks';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport { appWithTranslation } from '~/i18n';\nimport theme from '~/theme';\nimport configureStore from '~/state/store';\nimport { useGraphQLClient } from '~/lib/graphql-client';\n\nconst store = configureStore();\n\nconst myApp = ({ Component, pageProps }: AppProps) => {\n  const graphQLClient = useGraphQLClient(pageProps.initialGraphQLState);\n\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Scoretrackr</title>\n        <meta\n          name=\"viewport\"\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n        />\n      </Head>\n\n      <ClientContext.Provider value={graphQLClient}>\n        <ThemeProvider theme={theme}>\n          <ReduxProvider store={store}>\n            <CssBaseline />\n            <Component {...pageProps} />\n          </ReduxProvider>\n        </ThemeProvider>\n      </ClientContext.Provider>\n    </>\n  );\n};\n\nmyApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext);\n  return { ...appProps };\n};\n\nexport default appWithTranslation(myApp);\n"]},"metadata":{},"sourceType":"module"}